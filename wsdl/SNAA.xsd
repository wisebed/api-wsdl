<?xml version="1.0" encoding="UTF-8"?>

<xs:schema version="1.0"
		   targetNamespace="http://wisebed.eu/api/v3/snaa"
		   xmlns="http://wisebed.eu/api/v3/snaa"
		   xmlns:common="http://wisebed.eu/api/v3/common"
		   xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<xs:import namespace="http://wisebed.eu/api/v3/common" schemaLocation="Common.xsd" />

	<xs:complexType name="SNAAFault">
		<xs:sequence>
			<xs:element name="message" type="xs:string" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="authenticate">
		<xs:choice>
			<xs:sequence>
				<xs:element name="authenticationData" type="authenticationTriple" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:sequence>
				<xs:element name="certAuthenticationData" type="authenticationSAML" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="authenticateResponse">
		<xs:sequence>
			<xs:element name="secretAuthenticationKey" type="common:secretAuthenticationKey" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="authenticationTriple">
		<xs:sequence>
			<xs:element name="password" type="xs:string" />
			<xs:element name="urnPrefix" type="common:NodeUrnPrefix" />
			<xs:element name="username" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="authenticationSAML">
		<xs:sequence>
			<xs:element name="SAMLAssertion" type="xs:string" />
			<xs:element name="urnPrefix" type="common:NodeUrnPrefix" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="isAuthorized">
		<xs:sequence>
            <xs:element name="usernameNodeUrnsMapList" type="common:UsernameNodeUrnsMap" maxOccurs="unbounded" />
			<xs:element name="action" type="Action" />
		</xs:sequence>
	</xs:complexType>

    <xs:complexType name="isAuthorizedResponse">
        <xs:sequence>
            <xs:element name="authorizationResponse" type="AuthorizationResponse" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="AuthorizationResponse">
        <xs:sequence>
            <xs:element name="authorized" type="xs:boolean" />
            <xs:element name="message" type="xs:string" minOccurs="0" />
            <xs:element name="perNodeUrnAuthorizationResponses" type="PerNodeUrnAuthorizationResponse" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

	<xs:complexType name="PerNodeUrnAuthorizationResponse">
		<xs:sequence>
			<xs:element name="nodeUrn" type="common:NodeUrn" />
			<xs:element name="authorized" type="xs:boolean" />
			<xs:element name="message" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>

    <xs:complexType name="isValid">
        <xs:sequence>
            <xs:element name="secretAuthenticationKeys" type="common:secretAuthenticationKey" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="isValidResponse">
        <xs:sequence>
            <xs:element name="validationResults" type="ValidationResult" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

	<xs:complexType name="ValidationResult">
		<xs:sequence>
			<xs:element name="urnPrefix" type="common:NodeUrnPrefix" />
			<xs:element name="valid" type="xs:boolean" />
			<xs:element name="message" type="xs:string" />
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="Action">
		<xs:restriction base="xs:string">

			<!-- Operations on RS service -->
			<xs:enumeration value="RS_GET_CONFIDENTIAL_RESERVATIONS" />
			<xs:enumeration value="RS_GET_RESERVATIONS" />
			<xs:enumeration value="RS_GET_RESERVATION" />
			<xs:enumeration value="RS_DELETE_RESERVATION" />
			<xs:enumeration value="RS_MAKE_RESERVATION" />

			<!-- Operations on SM service -->
			<xs:enumeration value="SM_ARE_NODES_ALIVE" />
			<xs:enumeration value="SM_GET_CONFIGURATION" />
			<xs:enumeration value="SM_GET_INSTANCE" />
			<xs:enumeration value="SM_GET_NETWORK" />
			<xs:enumeration value="SM_GET_SUPPORTED_CHANNEL_HANDLERS" />
			<xs:enumeration value="SM_GET_SUPPORTED_VIRTUAL_LINK_FILTERS" />

			<!-- Operations on WSN service -->
			<xs:enumeration value="WSN_ADD_CONTROLLER" />
			<xs:enumeration value="WSN_ARE_NODES_ALIVE" />
			<xs:enumeration value="WSN_DESTROY_VIRTUAL_LINKS" />
			<xs:enumeration value="WSN_DISABLE_NODES" />
			<xs:enumeration value="WSN_DISABLE_PHYSICAL_LINKS" />
			<xs:enumeration value="WSN_DISABLE_VIRTUALIZATION" />
			<xs:enumeration value="WSN_ENABLE_NODES" />
			<xs:enumeration value="WSN_ENABLE_PHYSICAL_LINKS" />
			<xs:enumeration value="WSN_ENABLE_VIRTUALIZATION" />
			<xs:enumeration value="WSN_FLASH_PROGRAMS" />
			<xs:enumeration value="WSN_GET_CHANNEL_PIPELINES" />
			<xs:enumeration value="WSN_GET_NETWORK" />
			<xs:enumeration value="WSN_GET_VERSION" />
			<xs:enumeration value="WSN_REMOVE_CONTROLLER" />
			<xs:enumeration value="WSN_RESET_NODES" />
			<xs:enumeration value="WSN_SEND" />
			<xs:enumeration value="WSN_SET_CHANNEL_PIPELINE" />
			<xs:enumeration value="WSN_SET_SERIAL_PORT_PARAMETERS" />
			<xs:enumeration value="WSN_SET_VIRTUAL_LINK" />

		</xs:restriction>
	</xs:simpleType>

	<xs:element name="authenticate" type="authenticate" />
	<xs:element name="authenticateResponse" type="authenticateResponse" />
	<xs:element name="isAuthorized" type="isAuthorized" />
	<xs:element name="isAuthorizedResponse" type="isAuthorizedResponse" />
	<xs:element name="isValid" type="isValid"/>
	<xs:element name="isValidResponse" type="isValidResponse"/>

	<xs:element name="SNAAFault" type="SNAAFault" />

</xs:schema>
